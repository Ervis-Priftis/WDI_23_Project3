<<<<<<< HEAD
{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/challenge.js","js/controllers/challenges.js","js/controllers/main.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","ConfirmController","$http","method","params","confirmationCode","LoginController","login","credentials","Challenge","$resource","id","update","ChallengesIndexController","challengesIndex","all","query","ChallengesNewController","create","save","challengesNew","challenge","ChallengesShowController","deleteChallenge","challengesShow","$remove","challengeLike","like","$update","get","incrementLikes","isLoggedIn","isAuthenticated","delete","ChallengesEditController","challengesEdit","MainController","logout","main","currentUser","getPayload","message","UsersIndexController","User","usersIndex","UsersNewController","usersNew","UsersShowController","userLikes","usersShow","likes","includes","authUser","push","console","log","data","deleteUser","totalLikes","length","_id","UsersEditController","usersEdit","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,mBACLC,IAAK,cACLC,YAAa,kCACbC,WAAY,iDAEbH,MAAM,iBACLC,IAAK,kBACLC,YAAa,gCACbC,WAAY,6CAEbH,MAAM,kBACLC,IAAK,kBACLC,YAAa,iCACbC,WAAY,+CAEbH,MAAM,kBACLC,IAAK,uBACLC,YAAa,iCACbC,WAAY,+CAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,WACLC,IAAK,6BACLC,YAAa,0BACbC,WAAY,iCAEbH,MAAM,QACLC,IAAK,IACLC,YAAa,yBAGdF,MAAM,cACLC,IAAK,eACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,aACLC,IAAK,wBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,mBACLC,YAAa,4BACbC,WAAY,qCAGhBJ,EAAmBK,UAAU,eAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GClE9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,UAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,mBAAkBC,EAAOT,GAChCS,GACEC,OAAQ,OACRrB,IAAAA,YAAiBW,EAAOW,OAAOC,mBAC9BP,KAAK,WACNL,EAAOM,GAAG,WAKd,QAASO,iBAAgBd,EAAOC,GAK9B,QAASC,KACPF,EAAMe,MAAMA,EAAMC,aACfV,KAAK,WACJL,EAAOM,GAAG,UAPhB,GAAMQ,GAAQP,IAEdO,GAAMC,eASND,EAAMb,OAASA,ECxCjB,QAASe,WAAUC,GACjB,MAAO,IAAIA,GAAU,mBAAqBC,GAAI,SAC5CC,QAAUT,OAAQ,SCCtB,QAASU,2BAA0BJ,GACjC,GAAMK,GAAkBd,IAExBc,GAAgBC,IAAMN,EAAUO,QAKlC,QAASC,yBAAwBR,EAAWhB,GAK1C,QAASyB,KACPT,EAAUU,KAAKC,EAAcC,UAAW,WACtC5B,EAAOM,GAAG,qBANd,GAAMqB,GAAgBpB,IAEtBoB,GAAcC,aAQdD,EAAcF,OAASA,EAKzB,QAASI,0BAAyBb,EAAWhB,EAAQD,GAMnD,QAAS+B,KACPC,EAAeH,UAAUI,QAAQ,WAC/BhC,EAAOM,GAAG,qBAId,QAAS2B,KACPF,EAAeH,UAAUM,OACzBH,EAAeH,UAAUO,UAZ3B,GAAMJ,GAAiBxB,IAEvBwB,GAAeH,UAAYZ,EAAUoB,IAAIpC,EAAOW,QAahDoB,EAAeM,eAAiBJ,EAChCF,EAAeO,WAAavC,EAAMwC,gBAClCR,EAAeS,OAASV,EAI1B,QAASW,0BAAyBzB,EAAWhB,GAK3C,QAASmB,KACPuB,EAAed,UAAUO,QAAQ,WAC/BnC,EAAOM,GAAG,iBAAkBN,EAAOW,UANvC,GAAM+B,GAAiBnC,IAEvBmC,GAAed,UAAYZ,EAAUoB,IAAIpC,EAAOW,QAQhDJ,KAAKY,OAASA,EC7DhB,QAASwB,gBAAe5C,EAAOC,GAO7B,QAAS4C,KACP7C,EAAM6C,SACHvC,KAAK,WACJL,EAAOM,GAAG,UAThB,GAAMuC,GAAOtC,IAEbsC,GAAKP,WAAavC,EAAMwC,gBAExBM,EAAKC,YAAc/C,EAAMgD,aAQzBF,EAAKD,OAASA,EAEdC,EAAKG,QAAU,KCVjB,QAASC,sBAAqBC,GAC5B,GAAMC,GAAa5C,IACnB4C,GAAW7B,IAAM4B,EAAK3B,QAKxB,QAAS6B,oBAAmBF,EAAMlD,GAIhC,QAASyB,KACPyB,EAAKxB,KAAK2B,EAASjD,KAAM,WACvBJ,EAAOM,GAAG,eALd,GAAM+C,GAAW9C,IACjB8C,GAASjD,QAOTiD,EAAS5B,OAASA,EAKpB,QAAS6B,qBAAoBJ,EAAMlD,EAAQD,GAkBzC,QAASwD,MACFC,EAAUpD,KAAKqD,MAAMC,SAASF,EAAUG,WAAeH,EAAUG,WACpEH,EAAUpD,KAAKqD,MAAMG,KAAKJ,EAAUG,UAEpCE,QAAQC,IAAIN,EAAUpD,MACtBoD,EAAUpD,KAAK+B,QAAQ,SAAC4B,GACtBF,QAAQC,IAAIC,MAMlB,QAASC,KACPR,EAAUpD,KAAK4B,QAAQ,WACrBhC,EAAOM,GAAG,gBA/Bd,GAAMkD,GAAYjD,IAElB2C,GAAKd,IAAIpC,EAAOW,OAAQ,SAACoD,GACvBP,EAAUpD,KAAO2D,EACjBA,EAAKE,WAAaT,EAAUpD,KAAKqD,MAAMS,OAEvCV,EAAUG,SAAW5D,EAAMgD,aAEvBS,EAAUG,WACZH,EAAUG,SAAWH,EAAUG,SAASQ,KAG1CX,EAAUnB,eAAiBkB,EAC3BC,EAAUlB,WAAavC,EAAMwC,gBAC7BiB,EAAUhB,OAASwB,IAwBvB,QAASI,qBAAoBlB,EAAMlD,EAAQD,GAOzC,QAASoB,KACPkD,EAAUjE,KAAK+B,QAAQ,WACrBnC,EAAOM,GAAG,YAAaN,EAAOW,UARlC,GAAM0D,GAAY9D,IAElB8D,GAAUjE,KAAO8C,EAAKd,KAAMlB,GAAInB,EAAMgD,aAAaoB,MAEnDN,QAAQC,IAAIO,EAAUjE,MAQtBiE,EAAUlD,OAASA,EC5ErB,QAAS+B,MAAKjC,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUT,OAAQ,SNRtB4D,QACGC,OAAO,SAAU,aAAc,YAAa,eAC5CC,OAAOvF,QACPuF,OAAO/E,MAEVR,OAAOwF,SAAW,iBAAkB,sBA8DpChF,KAAKgF,SAAW,iBCnEhBH,QAAQC,OAAO,SACZhF,WAAW,qBAAsBO,oBACjCP,WAAW,oBAAqBiB,mBAChCjB,WAAW,kBAAmBsB,iBAEjCf,mBAAmB2E,SAAW,QAAS,UAgBvCjE,kBAAkBiE,SAAW,QAAS,UAUtC5D,gBAAgB4D,SAAW,QAAS,UC/BpCH,QAAQC,OAAO,SACZG,QAAQ,YAAa1D,WAExBA,UAAUyD,SAAW,aCHrBH,QAAQC,OAAO,SACZhF,WAAW,4BAA6B6B,2BACxC7B,WAAW,0BAA2BiC,yBACtCjC,WAAW,2BAA4BsC,0BACvCtC,WAAW,2BAA4BkD,0BAE1CrB,0BAA0BqD,SAAW,aAQrCjD,wBAAwBiD,SAAW,YAAa,UAgBhD5C,yBAAyB4C,SAAW,YAAa,SAAU,SAuB3DhC,yBAAyBgC,SAAW,YAAa,UCrDjDH,QAAQC,OAAO,SACZhF,WAAW,iBAAkBoD,gBAEhCA,eAAe8B,SAAW,QAAS,UCHnCH,QAAQC,OAAO,SACZhF,WAAW,uBAAwB0D,sBACnC1D,WAAW,qBAAsB6D,oBACjC7D,WAAW,sBAAuB+D,qBAClC/D,WAAW,sBAAuB6E,qBAIrCnB,qBAAqBwB,SAAW,QAOhCrB,mBAAmBqB,SAAW,OAAQ,UActCnB,oBAAoBmB,SAAW,OAAQ,SAAU,SAuCjDL,oBAAoBK,SAAW,OAAQ,SAAU,SCpEjDH,QACGC,OAAO,SACPG,QAAQ,OAAQxB,MAEnBA,KAAKuB,SAAW","file":"app.js","sourcesContent":["angular\n  .module('goApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('challengesIndex', {\n      url: '/challenges',\n      templateUrl: '/templates/challengesIndex.html',\n      controller: 'ChallengesIndexController as challengesIndex'\n    })\n    .state('challengesNew', {\n      url: '/challenges/new',\n      templateUrl: '/templates/challengesNew.html',\n      controller: 'ChallengesNewController as challengesNew'\n    })\n    .state('challengesShow', {\n      url: '/challenges/:id',\n      templateUrl: '/templates/challengesShow.html',\n      controller: 'ChallengesShowController as challengesShow'\n    })\n    .state('challengesEdit', {\n      url: '/challenges/:id/edit',\n      templateUrl: '/templates/challengesEdit.html',\n      controller: 'ChallengesEditController as challengesEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('confirm', {\n      url: '/confirm/:confirmationCode',\n      templateUrl: '/templates/confirm.html',\n      controller: 'ConfirmController as confirm'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n      // controller: 'HomeController as home'\n    })\n    .state('usersIndex', {\n      url: '/challengers',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersEdit', {\n      url: '/challengers/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('usersShow', {\n      url: '/challengers/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    });\n\n  $urlRouterProvider.otherwise('/challenges');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('goApp')\n  .controller('RegisterController', RegisterController)\n  .controller('ConfirmController', ConfirmController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nConfirmController.$inject = ['$http', '$state'];\nfunction ConfirmController($http, $state) {\n  $http({\n    method: 'POST',\n    url: `/confirm/${$state.params.confirmationCode}`\n  }).then(() => {\n    $state.go('login');\n  });\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('home');\n      });\n\n  }\n  login.submit = submit;\n}\n","angular.module('goApp')\n  .factory('Challenge', Challenge);\n\nChallenge.$inject = ['$resource'];\nfunction Challenge($resource) {\n  return new $resource('/challenges/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('goApp')\n  .controller('ChallengesIndexController', ChallengesIndexController)\n  .controller('ChallengesNewController', ChallengesNewController)\n  .controller('ChallengesShowController', ChallengesShowController)\n  .controller('ChallengesEditController', ChallengesEditController);\n\nChallengesIndexController.$inject = ['Challenge'];\nfunction ChallengesIndexController(Challenge) {\n  const challengesIndex = this;\n\n  challengesIndex.all = Challenge.query();\n}\n\n\nChallengesNewController.$inject = ['Challenge', '$state'];\nfunction ChallengesNewController(Challenge, $state) {\n  const challengesNew = this;\n\n  challengesNew.challenge = {};\n\n  function create() {\n    Challenge.save(challengesNew.challenge, () => {\n      $state.go('challengesIndex');\n    });\n  }\n\n  challengesNew.create = create;\n}\n\n//SHOW\nChallengesShowController.$inject = ['Challenge', '$state', '$auth'];\nfunction ChallengesShowController(Challenge, $state, $auth) {\n\n  const challengesShow = this;\n\n  challengesShow.challenge = Challenge.get($state.params);\n\n  function deleteChallenge() {\n    challengesShow.challenge.$remove(() => {\n      $state.go('challengesIndex');\n    });\n  }\n\n  function challengeLike() {\n    challengesShow.challenge.like ++;\n    challengesShow.challenge.$update();\n  }\n\n  challengesShow.incrementLikes = challengeLike;\n  challengesShow.isLoggedIn = $auth.isAuthenticated;\n  challengesShow.delete = deleteChallenge;\n}\n\nChallengesEditController.$inject = ['Challenge', '$state'];\nfunction ChallengesEditController(Challenge, $state) {\n  const challengesEdit = this;\n\n  challengesEdit.challenge = Challenge.get($state.params);\n\n  function update() {\n    challengesEdit.challenge.$update(() => {\n      $state.go('challengesShow', $state.params);\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('goApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\nfunction MainController($auth, $state) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  main.currentUser = $auth.getPayload();\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('home');\n      });\n  }\n  main.logout = logout;\n\n  main.message = null;\n  // const protectedStates = ['playersEdit', 'playersNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n}\n","angular.module('goApp')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\n//INDEX\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n  usersIndex.all = User.query();\n}\n\n//CREATE\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('userIndex');\n    });\n  }\n  usersNew.create = create;\n}\n\n//SHOW & DELETE\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  User.get($state.params, (data) => {\n    usersShow.user = data;\n    data.totalLikes = usersShow.user.likes.length;\n\n    usersShow.authUser = $auth.getPayload();\n\n    if (usersShow.authUser) {\n      usersShow.authUser = usersShow.authUser._id;\n    }\n\n    usersShow.incrementLikes = userLikes;\n    usersShow.isLoggedIn = $auth.isAuthenticated;\n    usersShow.delete = deleteUser;\n  });\n\n  function userLikes() {\n    if (!usersShow.user.likes.includes(usersShow.authUser) && !!usersShow.authUser) {\n      usersShow.user.likes.push(usersShow.authUser);\n      // usersShow.user.$update();\n      console.log(usersShow.user);\n      usersShow.user.$update((data) => {\n        console.log(data);\n      });\n    }\n  }\n\n  // usersShow.user = User.get($state.params);\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n}\n\n//EDIT\nUsersEditController.$inject = ['User', '$state', '$auth'];\nfunction UsersEditController(User, $state, $auth) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get({ id: $auth.getPayload()._id });\n\n  console.log(usersEdit.user);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  usersEdit.update = update;\n}\n","angular\n  .module('goApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\n\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}
=======
{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/challenge.js","js/controllers/challenges.js","js/services/currentUser.js","js/directives/dragDrop.js","js/controllers/main.js","js/controllers/profile.js","js/models/user.js","js/services/user.js","js/controllers/users.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","User","login","isLoggedIn","console","log","credentials","currentUser","getPayload","get","id","_id","data","account","Challenge","$resource","update","method","ChallengesIndexController","challengesIndex","all","query","ChallengesNewController","create","save","challengesNew","challenge","ChallengesShowController","deleteChallenge","challengesShow","$remove","challengeLike","userIdIndex","like","indexOf","authUser","includes","push","$update","splice","participate","participants","userId","userProfile","activeChallenges","Unparticipate","indexId","togglePopUp","popUpActive","params","incrementLikes","isAuthenticated","delete","ChallengesEditController","challengesEdit","dragDrop","restrict","place","link","$scope","element","MainController","toggleMenu","main","menuActive","ProfileController","logout","profile","currentUserId","message","self","UsersIndexController","usersIndex","UsersNewController","usersNew","UsersShowController","userLikes","usersShow","likes","deleteUser","UsersEditController","usersEdit","bio","angular","module","config","$inject","factory","service","directive"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,mBACLC,IAAK,cACLC,YAAa,kCACbC,WAAY,iDAEbH,MAAM,iBACLC,IAAK,kBACLC,YAAa,gCACbC,WAAY,6CAEbH,MAAM,kBACLC,IAAK,kBACLC,YAAa,iCACbC,WAAY,+CAEbH,MAAM,kBACLC,IAAK,uBACLC,YAAa,iCACbC,WAAY,+CAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,QACLC,IAAK,IACLC,YAAa,yBAGdF,MAAM,cACLC,IAAK,eACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,aACLC,IAAK,wBACLC,YAAa,4BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,mBACLC,YAAa,4BACbC,WAAY,qCAGhBJ,EAAmBK,UAAU,eAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GC9D9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,UAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,EAAQS,EAAML,GAK5C,QAASH,KACPS,EAAMC,YAAa,EACnBC,QAAQC,IAAIH,EAAMC,YAClBZ,EAAMW,MAAMA,EAAMI,aACfT,KAAK,WACJK,EAAMK,YAAchB,EAAMiB,aAEvBN,EAAMK,aACPN,EAAKQ,KAAMC,GAAIR,EAAMK,YAAYI,KAAO,SAACC,GACvChB,EAAKiB,QAAUD,EACfR,QAAQC,IAAIT,EAAKW,eAGrBf,EAAOM,GAAG,UAjBhB,GAAMI,GAAQH,IAEdG,GAAMI,eAkBNJ,EAAMT,OAASA,ECtCjB,QAASqB,WAAUC,GACjB,MAAO,IAAIA,GAAU,mBAAqBL,GAAI,SAC5CM,QAAUC,OAAQ,SCCtB,QAASC,2BAA0BJ,GACjC,GAAMK,GAAkBpB,IACxBoB,GAAgBC,IAAMN,EAAUO,QAMlC,QAASC,yBAAwBR,EAAWtB,GAK1C,QAAS+B,KACPT,EAAUU,KAAKC,EAAcC,UAAW,WACtClC,EAAOM,GAAG,qBANd,GAAM2B,GAAgB1B,IAEtB0B,GAAcC,aAQdD,EAAcF,OAASA,EAKzB,QAASI,0BAAyBb,EAAWb,EAAMT,EAAQD,GAYzD,QAASqC,KACPC,EAAeH,UAAUI,QAAQ,WAC/BtC,EAAOM,GAAG,qBAId,QAASiC,KACP,GAAMC,GAAcH,EAAeH,UAAUO,KAAKC,QAAQL,EAAeM,WAEpEN,EAAeH,UAAUO,KAAKG,SAASP,EAAeM,WAAeN,EAAeM,UACvFN,EAAeH,UAAUO,KAAKI,KAAKR,EAAeM,UAClDN,EAAeH,UAAUY,WAChBT,EAAeH,UAAUO,KAAKG,SAASP,EAAeM,WAAeN,EAAeM,WAC7FN,EAAeH,UAAUO,KAAKM,OAAOP,EAAa,GAClDH,EAAeH,UAAUY,WAI7B,QAASE,KAEPX,EAAeH,UAAUe,aAAa7B,KAAKyB,KAAKR,EAAeM,UAC/DN,EAAeH,UAAUe,aAAaC,OAAOL,KAAKR,EAAeM,UAEjEN,EAAeH,UAAUY,QAAQ,SAAC1B,GAChCR,QAAQC,IAAIO,KAKdiB,EAAec,YAAYC,iBAAiBP,KAAKR,EAAeH,UAAUf,KAG1EkB,EAAeH,UAAUY,UACzBT,EAAec,YAAYL,UAI7B,QAASO,KACP,GAAMC,GAAUjB,EAAeH,UAAUe,aAAaC,OAAOR,QAAQL,EAAeM,SACpFN,GAAeH,UAAUe,aAAaC,OAAOH,OAAOO,EAAS,GAC7D1C,QAAQC,IAAIwB,EAAeH,UAAUe,aAAaC,QAGpD,QAASK,KACP3C,QAAQC,IAAI,oBACZwB,EAAemB,aAAc,EAvD/B,GAAMnB,GAAiB9B,IACvB8B,GAAeM,SAAW5C,EAAMiB,aAC5BqB,EAAeM,WACjBN,EAAeM,SAAWN,EAAeM,SAASxB,IAClDV,EAAKQ,KAAKC,GAAImB,EAAeM,UAAW,SAACvB,GACvCiB,EAAec,YAAc/B,KAIjCiB,EAAeH,UAAYZ,EAAUL,IAAIjB,EAAOyD,QAiDhDpB,EAAekB,YAAcA,EAC7BlB,EAAegB,cAAgBA,EAC/BhB,EAAeW,YAAcA,EAC7BX,EAAeqB,eAAiBnB,EAChCF,EAAe1B,WAAaZ,EAAM4D,gBAClCtB,EAAeuB,OAASxB,EAI1B,QAASyB,0BAAyBvC,EAAWtB,GAK3C,QAASwB,KACPsC,EAAe5B,UAAUY,QAAQ,WAC/B9C,EAAOM,GAAG,iBAAkBN,EAAOyD,UANvC,GAAMK,GAAiBvD,IAEvBuD,GAAe5B,UAAYZ,EAAUL,IAAIjB,EAAOyD,QAQhDlD,KAAKiB,OAASA,EC3GhB,QAAST,aAAaN,EAAMV,GAC1B,GAAIK,GAAOG,KAGLQ,EAAchB,EAAMiB,YAEvBD,IACDN,EAAKQ,KAAMC,GAAIH,EAAYI,KAAO,SAACC,GACjChB,EAAKiB,QAAUD,ICTrB,QAAS2C,YACP,OACEC,SAAU,IACVC,OAAO,EACP3E,YAAa,0BACb4E,KAJK,SAIAC,EAAQC,GACXxD,QAAQC,IAAIuD,KCLlB,QAASC,gBAAetE,GAMtB,QAASuE,KACP1D,QAAQC,IAAI,kBACZ0D,EAAKC,YAAcD,EAAKC,WACxB5D,QAAQC,IAAI0D,EAAKC,YARnB,GAAMD,GAAOhE,IAEbgE,GAAK5D,WAAaZ,EAAM4D,gBACxBY,EAAKxD,YAAchB,EAAMiB,aAOzBuD,EAAKD,WAAaA,ECXpB,QAASG,mBAAkB1E,EAAOC,EAAQS,EAAML,GAgB9C,QAASsE,KACP3E,EAAM2E,SACHrE,KAAK,WACJsE,EAAQtD,QAAU,KAClBrB,EAAOM,GAAG,UAnBhB,GAAMqE,GAAUpE,IAEhBoE,GAAQhE,WAAaZ,EAAM4D,gBAEvB5D,EAAMiB,eACR2D,EAAQC,cAAgB7E,EAAMiB,aAAaG,KAE7CwD,EAAQ5D,YAAcX,EAEnBuE,EAAQhE,cACTF,EAAKQ,KAAMC,GAAIyD,EAAQC,eAAiB,SAACxD,GACvChB,EAAKiB,QAAUD,IAWnBuD,EAAQD,OAASA,EAEjBC,EAAQE,QAAU,KCvBpB,QAASpE,MAAKc,GACZ,MAAO,IAAIA,GAAU,cAAgBL,GAAI,SACvCM,QAAUC,OAAQ,SCLtB,QAASrB,QACP,GAAI0E,GAAOvE,IAEXuE,GAAKzD,WCGP,QAAS0D,sBAAqBtE,GAC5B,GAAMuE,GAAazE,IACnByE,GAAWpD,IAAMnB,EAAKoB,QAKxB,QAASoD,oBAAmBxE,EAAMT,GAIhC,QAAS+B,KACPtB,EAAKuB,KAAKkD,EAAS9E,KAAM,WACvBJ,EAAOM,GAAG,eALd,GAAM4E,GAAW3E,IACjB2E,GAAS9E,QAOT8E,EAASnD,OAASA,EAKpB,QAASoD,qBAAoB1E,EAAMT,EAAQD,GAgBzC,QAASqF,KACP,GAAM5C,GAAc6C,EAAUjF,KAAKkF,MAAM5C,QAAQ2C,EAAU1C,WAEtD0C,EAAUjF,KAAKkF,MAAM1C,SAASyC,EAAU1C,WAAe0C,EAAU1C,UACpE0C,EAAUjF,KAAKkF,MAAMzC,KAAKwC,EAAU1C,UACpC0C,EAAUjF,KAAK0C,WACNuC,EAAUjF,KAAKkF,MAAM1C,SAASyC,EAAU1C,WAAe0C,EAAU1C,WAC1E0C,EAAUjF,KAAKkF,MAAMvC,OAAOP,EAAa,GACzC6C,EAAUjF,KAAK0C,WAenB,QAASyC,KACPF,EAAUjF,KAAKkC,QAAQ,WACrBtC,EAAOM,GAAG,gBAxCd,GAAM+E,GAAY9E,IAElBE,GAAKQ,IAAIjB,EAAOyD,OAAQ,SAACrC,GACvBiE,EAAUjF,KAAOgB,EAEjBiE,EAAU1C,SAAW5C,EAAMiB,aACvBqE,EAAU1C,WACZ0C,EAAU1C,SAAW0C,EAAU1C,SAASxB,KAG1CkE,EAAU3B,eAAiB0B,EAC3BC,EAAU1E,WAAaZ,EAAM4D,gBAC7B0B,EAAUzB,OAAS2B,IAmCvB,QAASC,qBAAoB/E,EAAMT,EAAQD,GAezC,QAASyB,KACPiE,EAAUrF,KAAK0C,QAAQ,SAAC1B,GACtBR,QAAQC,IAAIO,EAAKsE,KACjB1F,EAAOM,GAAG,aAAeY,GAAIuE,EAAU9C,aAjB3C,GAAM8C,GAAYlF,IAElBkF,GAAU9C,SAAW5C,EAAMiB,aACvByE,EAAU9C,WACZ8C,EAAU9C,SAAW8C,EAAU9C,SAASxB,KAG1CV,EAAKQ,KAAMC,GAAIuE,EAAU9C,UAAY,SAACvB,GACpCqE,EAAUrF,KAAOgB,EAEjBR,QAAQC,IAAI4E,EAAUrF,QAWxBqF,EAAUjE,OAASA,EVpGrBmE,QACGC,OAAO,SAAU,aAAc,YAAa,eAC5CC,OAAO5G,QACP4G,OAAOpG,MAEVR,OAAO6G,SAAW,iBAAkB,sBAyDpCrG,KAAKqG,SAAW,iBC9DhBH,QAAQC,OAAO,SACZrG,WAAW,qBAAsBO,oBACjCP,WAAW,kBAAmBiB,iBAEjCV,mBAAmBgG,SAAW,QAAS,UAgBvCtF,gBAAgBsF,SAAW,QAAS,SAAU,OAAQ,QCpBtDH,QAAQC,OAAO,SACZG,QAAQ,YAAazE,WAExBA,UAAUwE,SAAW,aCHrBH,QAAQC,OAAO,SACZrG,WAAW,4BAA6BmC,2BACxCnC,WAAW,0BAA2BuC,yBACtCvC,WAAW,2BAA4B4C,0BACvC5C,WAAW,2BAA4BsE,0BAE1CnC,0BAA0BoE,SAAW,aAQrChE,wBAAwBgE,SAAW,YAAa,UAgBhD3D,yBAAyB2D,SAAW,YAAa,OAAQ,SAAU,SAqEnEjC,yBAAyBiC,SAAW,YAAa,UCnGjDH,QAAQC,OAAO,SACZI,QAAQ,cAAejF,aAE1BA,YAAY+E,SAAW,OAAQ,SCH/BH,QAAQC,OAAO,iBACZK,UAAU,WAAYlC,UCDzB4B,QAAQC,OAAO,SACZrG,WAAW,iBAAkB8E,gBAEhCA,eAAeyB,SAAW,SCH1BH,QAAQC,OAAO,SACZrG,WAAW,oBAAqBkF,mBAEnCA,kBAAkBqB,SAAW,QAAS,SAAU,OAAQ,QCHxDH,QACGC,OAAO,SACPG,QAAQ,OAAQtF,MAEnBA,KAAKqF,SAAW,aCJhBH,QAAQC,OAAO,SACZI,QAAQ,OAAQ5F,MCDnBuF,QAAQC,OAAO,SACZrG,WAAW,uBAAwBwF,sBACnCxF,WAAW,qBAAsB0F,oBACjC1F,WAAW,sBAAuB4F,qBAClC5F,WAAW,sBAAuBiG,qBAIrCT,qBAAqBe,SAAW,QAOhCb,mBAAmBa,SAAW,OAAQ,UActCX,oBAAoBW,SAAW,OAAQ,SAAU,SAgDjDN,oBAAoBM,SAAW,OAAQ,SAAU","file":"app.js","sourcesContent":["angular\n  .module('goApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('challengesIndex', {\n      url: '/challenges',\n      templateUrl: '/templates/challengesIndex.html',\n      controller: 'ChallengesIndexController as challengesIndex'\n    })\n    .state('challengesNew', {\n      url: '/challenges/new',\n      templateUrl: '/templates/challengesNew.html',\n      controller: 'ChallengesNewController as challengesNew'\n    })\n    .state('challengesShow', {\n      url: '/challenges/:id',\n      templateUrl: '/templates/challengesShow.html',\n      controller: 'ChallengesShowController as challengesShow'\n    })\n    .state('challengesEdit', {\n      url: '/challenges/:id/edit',\n      templateUrl: '/templates/challengesEdit.html',\n      controller: 'ChallengesEditController as challengesEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n      // controller: 'HomeController as home'\n    })\n    .state('usersIndex', {\n      url: '/challengers',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersEdit', {\n      url: '/challengers/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('usersShow', {\n      url: '/challengers/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    });\n\n  $urlRouterProvider.otherwise('/challenges');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('goApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state', 'User', 'user'];\nfunction LoginController($auth, $state, User, user) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    login.isLoggedIn = true;\n    console.log(login.isLoggedIn);\n    $auth.login(login.credentials)\n      .then(() => {\n        login.currentUser = $auth.getPayload();\n\n        if(login.currentUser) {\n          User.get({ id: login.currentUser._id }, (data) => {\n            user.account = data;\n            console.log(user.currentUser);\n          });\n        }\n        $state.go('home');\n      });\n  }\n  login.submit = submit;\n}\n","angular.module('goApp')\n  .factory('Challenge', Challenge);\n\nChallenge.$inject = ['$resource'];\nfunction Challenge($resource) {\n  return new $resource('/challenges/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('goApp')\n  .controller('ChallengesIndexController', ChallengesIndexController)\n  .controller('ChallengesNewController', ChallengesNewController)\n  .controller('ChallengesShowController', ChallengesShowController)\n  .controller('ChallengesEditController', ChallengesEditController);\n\nChallengesIndexController.$inject = ['Challenge'];\nfunction ChallengesIndexController(Challenge) {\n  const challengesIndex = this;\n  challengesIndex.all = Challenge.query();\n  // console.log('In the challenge index controller');\n}\n\n\nChallengesNewController.$inject = ['Challenge', '$state'];\nfunction ChallengesNewController(Challenge, $state) {\n  const challengesNew = this;\n\n  challengesNew.challenge = {};\n\n  function create() {\n    Challenge.save(challengesNew.challenge, () => {\n      $state.go('challengesIndex');\n    });\n  }\n\n  challengesNew.create = create;\n}\n\n//SHOW\nChallengesShowController.$inject = ['Challenge', 'User', '$state', '$auth'];\nfunction ChallengesShowController(Challenge, User, $state, $auth) {\n\n  const challengesShow = this;\n  challengesShow.authUser = $auth.getPayload();\n  if (challengesShow.authUser) {\n    challengesShow.authUser = challengesShow.authUser._id;\n    User.get({id: challengesShow.authUser}, (data)=> {\n      challengesShow.userProfile = data;\n    });\n  }\n\n  challengesShow.challenge = Challenge.get($state.params);\n  function deleteChallenge() {\n    challengesShow.challenge.$remove(() => {\n      $state.go('challengesIndex');\n    });\n  }\n\n  function challengeLike() {\n    const userIdIndex = challengesShow.challenge.like.indexOf(challengesShow.authUser);\n\n    if (!challengesShow.challenge.like.includes(challengesShow.authUser) && !!challengesShow.authUser) {\n      challengesShow.challenge.like.push(challengesShow.authUser);\n      challengesShow.challenge.$update();\n    } else if (challengesShow.challenge.like.includes(challengesShow.authUser) && !!challengesShow.authUser) {\n      challengesShow.challenge.like.splice(userIdIndex, 1);\n      challengesShow.challenge.$update();\n    }\n  }\n\n  function participate() {\n    // Add User Id to challenge model\n    challengesShow.challenge.participants.data.push(challengesShow.authUser);\n    challengesShow.challenge.participants.userId.push(challengesShow.authUser);\n\n    challengesShow.challenge.$update((data) => {\n      console.log(data);\n      // console.log(challengesShow.challenge.participants.userId);\n    });\n\n    // Add Challenge Id to user Model\n    challengesShow.userProfile.activeChallenges.push(challengesShow.challenge._id);\n\n    // Update both\n    challengesShow.challenge.$update();\n    challengesShow.userProfile.$update();\n\n  }\n\n  function Unparticipate() {\n    const indexId = challengesShow.challenge.participants.userId.indexOf(challengesShow.authUser);\n    challengesShow.challenge.participants.userId.splice(indexId, 1);\n    console.log(challengesShow.challenge.participants.userId);\n  }\n\n  function togglePopUp() {\n    console.log('In toggle pop up');\n    challengesShow.popUpActive = true;\n  }\n\n  challengesShow.togglePopUp = togglePopUp;\n  challengesShow.Unparticipate = Unparticipate;\n  challengesShow.participate = participate;\n  challengesShow.incrementLikes = challengeLike;\n  challengesShow.isLoggedIn = $auth.isAuthenticated;\n  challengesShow.delete = deleteChallenge;\n}\n\nChallengesEditController.$inject = ['Challenge', '$state'];\nfunction ChallengesEditController(Challenge, $state) {\n  const challengesEdit = this;\n\n  challengesEdit.challenge = Challenge.get($state.params);\n\n  function update() {\n    challengesEdit.challenge.$update(() => {\n      $state.go('challengesShow', $state.params);\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('goApp')\n  .service('currentUser', currentUser);\n\ncurrentUser.$inject = ['User', '$auth'];\nfunction currentUser (User, $auth) {\n  var user = this;\n\n  // const isLoggedIn = $auth.isAuthenticated;\n  const currentUser = $auth.getPayload();\n\n  if(currentUser) {\n    User.get({ id: currentUser._id }, (data) => {\n      user.account = data;\n    });\n  }\n}\n","angular.module('imageUploader')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n  return {\n    restrict: 'E',\n    place: true,\n    templateUrl: 'templates/dragDrop.html',\n    link($scope, element) {\n      console.log(element);\n    }\n  };\n}\n","angular.module('goApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth'];\nfunction MainController($auth) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.currentUser = $auth.getPayload();\n\n  function toggleMenu() {\n    console.log('in toggle menu');\n    main.menuActive = !main.menuActive;\n    console.log(main.menuActive);\n  }\n  main.toggleMenu = toggleMenu;\n\n\n\n\n\n\n\n\n\n  // main.getProfile = getProfile;\n\n  // const protectedStates = ['playersEdit', 'playersNew'];\n  //\n  // function secureState(e, toState) {\n  //   main.message = null;\n  //   if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n  //     e.preventDefault();\n  //     $state.go('login');\n  //     main.message = 'You must be logged in to go there!';\n  //   }\n  // }\n\n  // $rootScope.$on('$stateChangeStart', secureState);\n\n}\n","angular.module('goApp')\n  .controller('ProfileController', ProfileController);\n\nProfileController.$inject = ['$auth', '$state', 'User', 'user'];\nfunction ProfileController($auth, $state, User, user) {\n  const profile = this;\n\n  profile.isLoggedIn = $auth.isAuthenticated;\n\n  if ($auth.getPayload()){\n    profile.currentUserId = $auth.getPayload()._id;\n  }\n  profile.currentUser = user;\n\n  if(profile.isLoggedIn()) {\n    User.get({ id: profile.currentUserId }, (data) => {\n      user.account = data;\n    });\n  }\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        profile.account = null;\n        $state.go('home');\n      });\n  }\n  profile.logout = logout;\n\n  profile.message = null;\n}\n","angular\n  .module('goApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\n\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('goApp')\n  .service('user', user);\n\nfunction user() {\n  var self = this;\n\n  self.account = {};\n}\n","angular.module('goApp')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersNewController', UsersNewController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\n//INDEX\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n  usersIndex.all = User.query();\n}\n\n//CREATE\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('userIndex');\n    });\n  }\n  usersNew.create = create;\n}\n\n//SHOW & DELETE\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  User.get($state.params, (data) => {\n    usersShow.user = data;\n\n    usersShow.authUser = $auth.getPayload();\n    if (usersShow.authUser) {\n      usersShow.authUser = usersShow.authUser._id;\n    }\n\n    usersShow.incrementLikes = userLikes;\n    usersShow.isLoggedIn = $auth.isAuthenticated;\n    usersShow.delete = deleteUser;\n  });\n\n  function userLikes() {\n    const userIdIndex = usersShow.user.likes.indexOf(usersShow.authUser);\n\n    if (!usersShow.user.likes.includes(usersShow.authUser) && !!usersShow.authUser) {\n      usersShow.user.likes.push(usersShow.authUser);\n      usersShow.user.$update();\n    } else if (usersShow.user.likes.includes(usersShow.authUser) && !!usersShow.authUser) {\n      usersShow.user.likes.splice(userIdIndex, 1);\n      usersShow.user.$update();\n    }\n  }\n\n  // function userChallenges () {\n  //   usersShow.users.activeChallenges.data.push(usersShow.authUser);\n  //   usersShow.users.activeChallenges.userId.push(usersShow.authUser);\n  //   usersShow.users.$update((data) => {\n  //     console.log(data);\n  //   });\n  // }\n  //\n  // usersShow.userChallenges = userChallenges;\n\n  // usersShow.user = User.get($state.params);\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n}\n\n//EDIT\nUsersEditController.$inject = ['User', '$state', '$auth'];\nfunction UsersEditController(User, $state, $auth) {\n  const usersEdit = this;\n\n  usersEdit.authUser = $auth.getPayload();\n  if (usersEdit.authUser) {\n    usersEdit.authUser = usersEdit.authUser._id;\n  }\n\n  User.get({ id: usersEdit.authUser }, (data) => {\n    usersEdit.user = data;\n\n    console.log(usersEdit.user);\n  });\n\n\n  function update() {\n    usersEdit.user.$update((data) => {\n      console.log(data.bio);\n      $state.go('usersShow', { id: usersEdit.authUser });\n    });\n  }\n\n  usersEdit.update = update;\n}\n"]}
>>>>>>> development
